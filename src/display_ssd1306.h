/*********************************************************************
This is a library for our Monochrome OLEDs based on SSD1306 drivers

  Pick one up today in the adafruit shop!
  ------> http://www.adafruit.com/category/63_98

These displays use SPI to communicate, 4 or 5 pins are required to
interface

Adafruit invests time and resources providing this open source code,
please support Adafruit and open-source hardware by purchasing
products from Adafruit!

Written by Limor Fried/Ladyada  for Adafruit Industries.
BSD license, check license.txt for more information
All text above, and the splash screen below must be included in any redistribution
*********************************************************************/

/*
 * display_ssd1306.h
 *
 *  Created on: 22. okt. 2016
 *      Author: teig
 */

#ifndef DISPLAY_SSD1306_H_
#define DISPLAY_SSD1306_H_

typedef enum i2c_display_reg_address_internal_t {
    DISPLAY_REG_ADDR_COMMAND = 0x00, // Co = 0, D/C = 0 As in writeDisplay_i2c_command
    DISPLAY_REG_ADDR_DATA    = 0x40  // Co = 0, D/C = 1 As in writeDisplay_i2c_data
} i2c_display_reg_address_internal_t;

typedef enum display_vccstate_t {
    SSD1306_EXTERNALVCC  = 0x01,
    SSD1306_SWITCHCAPVCC = 0x02
} display_vccstate_t;

extern bool Adafruit_SSD1306_i2c_begin           (client i2c_internal_commands_if if_i2c_internal_commands, out port p_display_notReset);

extern bool writeDisplay_i2c_command             (client i2c_internal_commands_if if_i2c_internal_commands, uint8_t c);
extern bool writeDisplay_i2c_data                (client i2c_internal_commands_if if_i2c_internal_commands, uint8_t c); // Never used..
extern bool tellDisplay_i2c_invert               (client i2c_internal_commands_if if_i2c_internal_commands, uint8_t i);
extern bool tellDisplay_i2c_startscrollright     (client i2c_internal_commands_if if_i2c_internal_commands, uint8_t start, uint8_t stop);
extern bool tellDisplay_i2c_startscrollleft      (client i2c_internal_commands_if if_i2c_internal_commands, uint8_t start, uint8_t stop);
extern bool tellDisplay_i2c_startscrolldiagright (client i2c_internal_commands_if if_i2c_internal_commands, uint8_t start, uint8_t stop);
extern bool tellDisplay_i2c_startscrolldiagleft  (client i2c_internal_commands_if if_i2c_internal_commands, uint8_t start, uint8_t stop);
extern bool tellDisplay_i2c_stopscroll           (client i2c_internal_commands_if if_i2c_internal_commands);
//
extern bool writeToDisplay_i2c_all_buffer        (client i2c_internal_commands_if if_i2c_internal_commands); // Returns true if ok
//
extern void Clear_All_Pixels_In_Buffer           (void);
extern void fillSplashScreen_in_buffer           (void);
extern void setPixel_in_buffer                   (int16_t x, int16_t y, uint16_t color);
extern void drawVerticalLine_in_buffer           (int16_t x, int16_t y, int16_t h, uint16_t color); // Virtual, instead of drawVerticalLine
extern void drawHorisontalLine_in_buffer         (int16_t x, int16_t y, int16_t w, uint16_t color); // Virtual, instead of drawHorisontalLine
extern void drawVerticalLineInternal_in_buffer   (int16_t x, int16_t y, int16_t h, uint16_t color); // was inline
extern void drawHorisontalLineInternal_in_buffer (int16_t x, int16_t y, int16_t w, uint16_t color); // was inline

#define BLACK   0
#define WHITE   1
#define INVERSE 2

#define SSD1306_128_32

#if defined SSD1306_128_64
    // UG-2864HSWEG01 with chip SSD1306 from Univision Technology Inc. 128x64 OLED. Adafruit 326
    #define SSD1306_LCDWIDTH  128
    #define SSD1306_LCDHEIGHT  64
#elif defined SSD1306_128_32
    // UG-2832HSWEG02 with chip SSD1306 from Univision Technology Inc. 128x32 OLED. Adafruit 931
    #define SSD1306_LCDWIDTH  128
    #define SSD1306_LCDHEIGHT  32
#elif defined SSD1306_128_16
    #define SSD1306_LCDWIDTH  128
    #define SSD1306_LCDHEIGHT  16
#else
    #error Display not defined
#endif

#define SSD1306_BUFFER_SIZE      ((SSD1306_LCDWIDTH*SSD1306_LCDHEIGHT)/8) // 512 or 1024 bytes
#define SSD1306_WRITE_CHUNK_SIZE 16


#define SSD1306_SETCONTRAST         0x81 // Value is set to 7Fh by display at reset. 256 step contrast brightness current control
#define SSD1306_DISPLAYALLON_RESUME 0xA4
#define SSD1306_DISPLAYALLON        0xA5
#define SSD1306_NORMALDISPLAY       0xA6
#define SSD1306_INVERTDISPLAY       0xA7
#define SSD1306_DISPLAYOFF          0xAE
#define SSD1306_DISPLAYON           0xAF
#define SSD1306_SETDISPLAYOFFSET    0xD3
#define SSD1306_SETCOMPINS          0xDA
#define SSD1306_SETVCOMDETECT       0xDB
#define SSD1306_SETDISPLAYCLOCKDIV  0xD5
#define SSD1306_SETPRECHARGE        0xD9
#define SSD1306_SETMULTIPLEX        0xA8
#define SSD1306_SETLOWCOLUMN        0x00
#define SSD1306_SETHIGHCOLUMN       0x10
#define SSD1306_SETSTARTLINE        0x40
#define SSD1306_MEMORYMODE          0x20
#define SSD1306_COLUMNADDR          0x21
#define SSD1306_PAGEADDR            0x22
#define SSD1306_COMSCANINC          0xC0
#define SSD1306_COMSCANDEC          0xC8
#define SSD1306_SEGREMAP            0xA0
#define SSD1306_CHARGEPUMP          0x8D
#define SSD1306_DEACTIVATE_SCROLL   0x2E

//      Contrast 0..255 appearantly doesn't work on the monochrome
//      https://forums.adafruit.com/viewtopic.php?f=47&t=30322&hilit=+oled+contrast#p172367
// Usage:
//     writeDisplay_i2c_command(if_i2c_internal_commands, SSD1306_SETCONTRAST);
//     writeDisplay_i2c_command(if_i2c_internal_commands, CONTRAST_VALUE_BRIGHT_IS_DEFAULT);
//
#define CONTRAST_VALUE_DIMMED            0x00 // Only dims to low level, not dark!
#define CONTRAST_VALUE_BRIGHT_IS_DEFAULT 0x8F // The Adafruit code used 0xCF and 0x9F but they are virtually equal to this
#define CONTRAST_VALUE_READ_EXTERNALVCC  0x9F // Not used here since 3.3V not connected

// Scrolling #defines
#define SSD1306_ACTIVATE_SCROLL                      0x2F
#define SSD1306_DEACTIVATE_SCROLL                    0x2E
#define SSD1306_SET_VERTICAL_SCROLL_AREA             0xA3
#define SSD1306_RIGHT_HORIZONTAL_SCROLL              0x26
#define SSD1306_LEFT_HORIZONTAL_SCROLL               0x27
#define SSD1306_VERTICAL_AND_RIGHT_HORIZONTAL_SCROLL 0x29
#define SSD1306_VERTICAL_AND_LEFT_HORIZONTAL_SCROLL  0x2A

//ÊEACHÊLINEÊISÊSSD1306_WRITE_CHUNK_SIZE
#define DISPLAY_BUFFER_ADAFRUIT_DEFAULT_0_192 \
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, \
    0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
    0x00, 0x80, 0x80, 0xC0, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
    0x00, 0x00, 0x00, 0x00, 0x80, 0xC0, 0xE0, 0xF0, 0xF8, 0xFC, 0xF8, 0xE0, 0x00, 0x00, 0x00, 0x00, \
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, \
    0x80, 0x80, 0x00, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x80, 0x00, 0xFF

#define DISPLAY_BUFFER_ADAFRUIT_DEFAULT_193_511 \
    0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x80, 0x80, 0x00, 0x00, \
    0x80, 0xFF, 0xFF, 0x80, 0x80, 0x00, 0x80, 0x80, 0x00, 0x80, 0x80, 0x80, 0x80, 0x00, 0x80, 0x80, \
    0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x00, 0x00, 0x8C, 0x8E, 0x84, 0x00, 0x00, 0x80, 0xF8, \
    0xF8, 0xF8, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
    0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xE0, 0xE0, 0xC0, 0x80, \
    0x00, 0xE0, 0xFC, 0xFE, 0xFF, 0xFF, 0xFF, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, \
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xC7, 0x01, 0x01, \
    0x01, 0x01, 0x83, 0xFF, 0xFF, 0x00, 0x00, 0x7C, 0xFE, 0xC7, 0x01, 0x01, 0x01, 0x01, 0x83, 0xFF, \
    0xFF, 0xFF, 0x00, 0x38, 0xFE, 0xC7, 0x83, 0x01, 0x01, 0x01, 0x83, 0xC7, 0xFF, 0xFF, 0x00, 0x00, \
    0x01, 0xFF, 0xFF, 0x01, 0x01, 0x00, 0xFF, 0xFF, 0x07, 0x01, 0x01, 0x01, 0x00, 0x00, 0x7F, 0xFF, \
    0x80, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x01, 0xFF, \
    0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
    0x03, 0x0F, 0x3F, 0x7F, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE7, 0xC7, 0xC7, 0x8F, \
    0x8F, 0x9F, 0xBF, 0xFF, 0xFF, 0xC3, 0xC0, 0xF0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0xFC, 0xFC, \
    0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xF8, 0xF8, 0xF0, 0xF0, 0xE0, 0xC0, 0x00, 0x01, 0x03, 0x03, 0x03, \
    0x03, 0x03, 0x01, 0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x03, 0x03, 0x03, 0x01, 0x01, \
    0x03, 0x01, 0x00, 0x00, 0x00, 0x01, 0x03, 0x03, 0x03, 0x03, 0x01, 0x01, 0x03, 0x03, 0x00, 0x00, \
    0x00, 0x03, 0x03, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, \
    0x03, 0x03, 0x03, 0x03, 0x03, 0x01, 0x00, 0x00, 0x00, 0x01, 0x03, 0x01, 0x00, 0x00, 0x00, 0x03, \
    0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00

#else
    #error Nested include DISPLAY_SSD1306_H_
#endif
